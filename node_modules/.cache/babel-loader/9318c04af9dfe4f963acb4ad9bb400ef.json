{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sonia/VisualStudioCode/Proyecto-React-Firebase/client/src/pages/auth/forgot.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, FormGroup, Input } from 'reactstrap';\nimport AuthContainer from '../../components/AuthContainer';\nimport ErrorText from '../../components/ErrorText';\nimport { auth } from '../../config/firebase';\nimport logging from '../../config/logging';\n\nconst ForgotPasswordPage = props => {\n  _s();\n\n  const [sending, setSending] = useState(false);\n  const [sent, setSent] = useState(false);\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n\n  const resetPasswordRequest = () => {\n    if (error !== '') setError('');\n    setSending(true);\n    auth.sendPasswordResetEmail(email).then(() => {\n      logging.info('Email sent.');\n      setSent(true);\n      setSending(false);\n    }).catch(error => {\n      logging.error(error);\n      setError(error.message);\n      setSending(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContainer, {\n    header: \"Send Password Reset\",\n    children: sent ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A link has been sent to your email with instructions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Email Address\",\n          onChange: event => setEmail(event.target.value),\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: sending,\n        color: \"success\",\n        block: true,\n        onClick: () => resetPasswordRequest(),\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgotPasswordPage, \"KeWNM9OfziUxLmcZzHhrFmD54Wo=\");\n\n_c = ForgotPasswordPage;\nexport default ForgotPasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"sources":["/home/sonia/VisualStudioCode/Proyecto-React-Firebase/client/src/pages/auth/forgot.tsx"],"names":["React","useState","Button","FormGroup","Input","AuthContainer","ErrorText","auth","logging","ForgotPasswordPage","props","sending","setSending","sent","setSent","email","setEmail","error","setError","resetPasswordRequest","sendPasswordResetEmail","then","info","catch","message","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,KAA5B,QAAyC,YAAzC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAGA,MAAMC,kBAAuD,GAAGC,KAAK,IAAI;AAAA;;AACrE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAU,KAAV,CAAhC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAS,EAAT,CAAlC;;AAEA,QAAMkB,oBAAoB,GAAG,MAAM;AAC/B,QAAIF,KAAK,KAAK,EAAd,EAAkBC,QAAQ,CAAC,EAAD,CAAR;AAElBN,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAL,IAAAA,IAAI,CAACa,sBAAL,CAA4BL,KAA5B,EACCM,IADD,CACM,MAAM;AACRb,MAAAA,OAAO,CAACc,IAAR,CAAa,aAAb;AACAR,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KALD,EAMCW,KAND,CAMON,KAAK,IAAI;AACZT,MAAAA,OAAO,CAACS,KAAR,CAAcA,KAAd;AACAC,MAAAA,QAAQ,CAACD,KAAK,CAACO,OAAP,CAAR;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAVD;AAWH,GAhBD;;AAkBA,sBACI,QAAC,aAAD;AAAe,IAAA,MAAM,EAAC,qBAAtB;AAAA,cACKC,IAAI,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,gBAGD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAA,+BACI,QAAC,KAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,EAAE,EAAC,OAHP;AAII,UAAA,WAAW,EAAC,eAJhB;AAKI,UAAA,QAAQ,EAAEY,KAAK,IAAIT,QAAQ,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAL/B;AAMI,UAAA,KAAK,EAAEZ;AANX;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYI,QAAC,MAAD;AACI,QAAA,QAAQ,EAAEJ,OADd;AAEI,QAAA,KAAK,EAAC,SAFV;AAGI,QAAA,KAAK,MAHT;AAII,QAAA,OAAO,EAAE,MAAMQ,oBAAoB,EAJvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAoBI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAJR;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH,CAtDD;;GAAMR,kB;;KAAAA,kB;AAwDN,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button, FormGroup, Input } from 'reactstrap';\nimport AuthContainer from '../../components/AuthContainer';\nimport ErrorText from '../../components/ErrorText';\nimport { auth } from '../../config/firebase';\nimport logging from '../../config/logging';\nimport IPageProps from '../../interfaces/page';\n\nconst ForgotPasswordPage: React.FunctionComponent<IPageProps> = props => {\n    const [sending, setSending] = useState<boolean>(false);\n    const [sent, setSent] = useState<boolean>(false);\n    const [email, setEmail] = useState<string>('');\n    const [error, setError] = useState<string>('');\n\n    const resetPasswordRequest = () => {\n        if (error !== '') setError('');\n\n        setSending(true);\n\n        auth.sendPasswordResetEmail(email)\n        .then(() => {\n            logging.info('Email sent.');\n            setSent(true);\n            setSending(false);\n        })\n        .catch(error => {\n            logging.error(error);\n            setError(error.message);\n            setSending(false);\n        });\n    }\n\n    return (\n        <AuthContainer header=\"Send Password Reset\">\n            {sent ?\n                <p>A link has been sent to your email with instructions.</p>\n            :\n                <>\n                    <p>Please enter your email.</p>\n                    <FormGroup>\n                        <Input \n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\"\n                            placeholder=\"Email Address\"\n                            onChange={event => setEmail(event.target.value)}\n                            value={email}\n                        />\n                    </FormGroup>\n                    <Button\n                        disabled={sending}\n                        color=\"success\"\n                        block\n                        onClick={() => resetPasswordRequest()}\n                    >\n                        Send Reset Link\n                    </Button>\n                    <ErrorText error={error} />\n                </>\n            }\n        </AuthContainer>\n    );\n}\n\nexport default ForgotPasswordPage;"]},"metadata":{},"sourceType":"module"}